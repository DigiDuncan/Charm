name: Read metadata from setup.cfg

outputs:
  package-name:
    description: Package name
    value: ${{ steps.package-name.outputs.text }}
  python-version:
    description: Python version
    value: ${{ steps.python-version.outputs.text }}
  package-path:
    description: Package path
    value: ${{ steps.package-path.outputs.text }}
  package-version:
    description: Package version
    value: ${{ steps.package-version.outputs.text }}

runs:
  using: composite
  steps:
    - name: Get package name
      id: package-name
      uses: ./.github/actions/find-regex
      with:
        regex: ^name *= *\(.*\) *$
        file: setup.cfg

    - name: Get python version
      id: python-version
      uses: ./.github/actions/find-regex
      with:
        regex: ^python_requires = >=\(.*\)$
        file: setup.cfg

    - name: Get package path
      id: package-path
      env:
        PACKAGE_NAME: ${{ steps.package-name.outputs.text }}
      run: |
        if [ -f "${PACKAGE_NAME}/__init__.py" ]; then
          PACKAGE_PATH=${PACKAGE_NAME}/__init__.py
        else
          PACKAGE_PATH=${PACKAGE_NAME}.py
        fi
        echo "::set-output name=text::${PACKAGE_PATH}"
      shell: bash

    - name: Get package version
      id: package-version
      uses: ./.github/actions/find-regex
      env:
        PACKAGE_PATH: ${{ steps.package-path.outputs.text }}
      with:
        regex: ^__version__ = \"\(.*\)\" *$
        file: ${{ env.PACKAGE_PATH }}
        
    - name: Metadata
      run: |
        echo package-name: ${{ steps.package-name.outputs.text }}
        echo python-version: ${{ steps.python-version.outputs.text }}
        echo package-path: ${{ steps.package-path.outputs.text }}
        echo package-version: ${{ steps.package-version.outputs.text }}
      shell: bash
